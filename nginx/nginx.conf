# Main configuration for an Nginx server acting as a reverse proxy to a FastAPI application
user nginx;
worker_processes auto; # Set worker processes to auto for optimal performance
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024; # Number of connections a worker can handle
}

http {
    # Basic HTTP settings
    sendfile on; # Enable high-performance file transfer
    tcp_nopush on; # Send HTTP headers in one piece
    tcp_nodelay on; # Disable the Nagle buffering algorithm
    keepalive_timeout 65; # Keep connections open for this duration
    types_hash_max_size 2048;
    include /etc/nginx/mime.types; # MIME types supported by the server
    default_type application/octet-stream;

    # Logging settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # GZip Compression
    gzip on;
    gzip_disable "msie6";

    # Proxy settings
    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Modular configuration
    include /etc/nginx/conf.d/*.conf;

    # Server configuration
    server {
        listen 80; # Listening on port 80

        location / {
            proxy_pass http://fastapi:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }


        # Error handling
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

    }
}
